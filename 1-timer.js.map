{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nconst refs = {\n  startBtn: document.querySelector('[data-start]'),\n  daysEl: document.querySelector('[data-days]'),\n  hoursEl: document.querySelector('[data-hours]'),\n  minutesEl: document.querySelector('[data-minutes]'),\n  secondsEl: document.querySelector('[data-seconds]'),\n};\n\nrefs.startBtn.disabled = true;\n\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (!selectedDate || selectedDate <= new Date()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        color: 'red',\n        position: 'topRight',\n      });\n      refs.startBtn.disabled = true;\n      userSelectedDate = null;\n      return;\n    }\n\n    userSelectedDate = selectedDate;\n    refs.startBtn.disabled = false;\n  },\n});\n\nrefs.startBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  refs.startBtn.disabled = true;\n  clearInterval(countdownInterval);\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(countdownInterval);\n      updateTimer(0);\n      return;\n    }\n\n    updateTimer(diff);\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  refs.daysEl.textContent = formatTime(days);\n  refs.hoursEl.textContent = formatTime(hours);\n  refs.minutesEl.textContent = formatTime(minutes);\n  refs.secondsEl.textContent = formatTime(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction formatTime(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["userSelectedDate","countdownInterval","refs","flatpickr","selectedDates","selectedDate","iziToast","diff","updateTimer","ms","days","hours","minutes","seconds","convertMs","formatTime","value"],"mappings":"+IAKA,IAAIA,EAAmB,KACnBC,EAAoB,KAExB,MAAMC,EAAO,CACX,SAAU,SAAS,cAAc,cAAc,EAC/C,OAAQ,SAAS,cAAc,aAAa,EAC5C,QAAS,SAAS,cAAc,cAAc,EAC9C,UAAW,SAAS,cAAc,gBAAgB,EAClD,UAAW,SAAS,cAAc,gBAAgB,CACpD,EAEAA,EAAK,SAAS,SAAW,GAEzBC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEpC,GAAI,CAACC,GAAgBA,GAAgB,IAAI,KAAQ,CAC/CC,EAAS,KAAK,CACZ,QAAS,qCACT,MAAO,MACP,SAAU,UAClB,CAAO,EACDJ,EAAK,SAAS,SAAW,GACzBF,EAAmB,KACnB,MACD,CAEDA,EAAmBK,EACnBH,EAAK,SAAS,SAAW,EAC1B,CACH,CAAC,EAEDA,EAAK,SAAS,iBAAiB,QAAS,IAAM,CACvCF,IAELE,EAAK,SAAS,SAAW,GACzB,cAAcD,CAAiB,EAE/BA,EAAoB,YAAY,IAAM,CAEpC,MAAMM,EAAOP,EADD,IAAI,KAGhB,GAAIO,GAAQ,EAAG,CACb,cAAcN,CAAiB,EAC/BO,EAAY,CAAC,EACb,MACD,CAEDA,EAAYD,CAAI,CACjB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtDP,EAAK,OAAO,YAAca,EAAWL,CAAI,EACzCR,EAAK,QAAQ,YAAca,EAAWJ,CAAK,EAC3CT,EAAK,UAAU,YAAca,EAAWH,CAAO,EAC/CV,EAAK,UAAU,YAAca,EAAWF,CAAO,CACjD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAWC,EAAO,CACzB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}